//
// openPipeline Info Retrieval functions
//

//***	The following is a full list of optionVars used. 
//		These can be accessed for pertinent information while openPipeline is running***
//
//CURRENTLY OPEN FILE INFO
//op_currOpenPath (string) - full path of the location of the currently open file
//op_currOpenType (string) - whether it's a workshop or master
//op_currOpenCategory (string) - whether it's a scene, asset type, asset or component
//op_currOpenVersion (int) - version of currently open file.  0 means no workshops have been created yet.
//
//CURRENT PROJECT INFO
//op_currProject (int) - 1-based index. corresponds to index in the project drop-down menu
//op_currProjectName (string) - project name
//op_currProjectPath (string) - full project path
//op_libPath (string) - full path to asset library
//op_scenePath (string) - full path to scenes folder
//op_archivePath (string) - full path to archive folder
//op_workshopFormat (string) - file format for workshops (ma or mb)
//op_masterFormat (string) - file format for master (ma or mb)
//op_workshopName (string) - display name for workshop files
//op_masterName (string) - display name for master files
//
//LISTS (all string arrays. each string within an array is a full path)
//op_scenes - list of scenes within the current project
//op_sceneAssets - list of assets listed under the selected asset type (scene management tab)
//op_assetTypes - list of asset types within the current project
//op_assets - list of assets under the selected asset type (asset management tab)
//op_components - list of components under the selected asset

//*** returns the path and filename for the appropriate note file
//      $inputMode - 'note', 'scenenote', 'openednote' or 'newnote'. 
//          See below for specific explanations of the different modes.
global proc string openPipelineGetPath(string $inputMode)
{
	string $currPath = `optionVar -q "op_currOpenPath"`;
	string $name = openPipelineGetFolderFromPath($currPath,0);
  string $currCategory = `optionVar -q "op_currOpenCategory"`;
  string $creationPath = `optionVar -q "op_creationPath"`;
  string $creationType = `optionVar -q "op_creationType"`;
	string $asset = `openPipelineGetSelectedAsset`;
	string $openPipeline_menuCurrentAsset = openPipelineGetFolderFromPath($asset, 0);	
	string $component = `openPipelineGetSelectedComponent`;
	string $openPipeline_menuCurrentAssetComponent = openPipelineGetFolderFromPath($component, 0);	
	string $scene = `openPipelineGetSelectedScene`;
	string $selectedScene = openPipelineGetFolderFromPath($scene, 0);
	string $outputString;
	switch($inputMode)
	{
		//returns the note file for the currently selected asset / component
		case "note":
			string $notesPath;
			if (size($component))
			{
				$notesPath = $component + "notes/";
				$outputString = $notesPath + $openPipeline_menuCurrentAsset + "_" + $openPipeline_menuCurrentAssetComponent + "_ComponentNote.xml";
			}
			else if (size($asset))
			{
				$notesPath = $asset + "notes/";
				$outputString = $notesPath + $openPipeline_menuCurrentAsset + "_AssetNote.xml";
			}
			
			else
			    $outputString = "";
			break;
        
        //returns the note file for the currently selected scene
        case "scenenote":
			if (size($scene))
			{
    			string $notesPath = ($scene + "notes/");
    			$outputString = $notesPath + $selectedScene + "_SceneNote.xml";
    	    }
    	    else
    	    {
    	        $outputString = "";
    	    }
			break;
			
		//returns the note file for the asset / component / scene which is currently open for editing
		case "openednote":
			
			if ($currCategory == "asset")
			{
				$outputString = ($currPath + "notes/" + $name + "_AssetNote.xml");
			}
			else if ($currCategory == "scene")
			{
			    $outputString = ($currPath + "notes/" + $name + "_SceneNote.xml");
			}
			else if ($currCategory == "component")
			{
				string $aName = openPipelineGetFolderFromPath($currPath,2);
				$outputString = ($currPath + "notes/" + $aName + "_" + $name + "_ComponentNote.xml");
			}		
            else
            {
                $outputString = "";
            }
			break;
		
		//returns the note file for the most recently created asset / component / scene
		case "newnote":
			string $notesPath = $creationPath + "notes/";

			if ($creationType == "asset")
			{
				string $assetName = openPipelineGetFolderFromPath($creationPath,0);
				$outputString = $notesPath + $assetName + "_AssetNote.xml";
			}
			else if ($creationType == "component")
			{
				string $assetName = openPipelineGetFolderFromPath($creationPath,2);
				string $componentName = openPipelineGetFolderFromPath($creationPath,0);
				$outputString = $notesPath + $assetName + "_" + $componentName + "_ComponentNote.xml";
			}
			else if ($creationType == "scene")
			{
			    string $sceneName = openPipelineGetFolderFromPath($creationPath,0);
			    $outputString = $notesPath + $sceneName + "_SceneNote.xml"; 
			}
			break;
	}
	return $outputString;
}

//*** returns the current date
global proc string openPipelineGetDate()
{
	string $date = `about -cd`;
	string $dateSeparated[];
	tokenize($date,"/",$dateSeparated);
	$date = $dateSeparated[1]+"/"+$dateSeparated[2]+"/"+$dateSeparated[0];
	return $date;
}

//*** returns the current time
global proc string openPipelineGetTime()
{
	string $time = `about -ct`;
	return $time;
}